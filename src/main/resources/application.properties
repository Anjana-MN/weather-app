server.port=8080
timeout=300000

# Redis Config
spring.cache.type=redis
spring.data.redis.host=${REDIS_PRIMARY_ENDPOINT}
spring.data.redis.port=6379
#spring.cache.redis.time-to-live=1800000
spring.data.redis.timeout=1000
#spring.redis.password=${REDIS_PASSWORD}
#spring.data.redis.ssl=true
redis.cache.time-to-live=30

weather.query.map={'appId':'&appId=','city':'&q=','count':'&cnt=','units':'&units='}
weather.units.api=https://api.openweathermap.org/data/2.5/forecast?
weather.appid=d2929e9483efc82c82c32ee7e02d563e

resilience4j.circuitbreaker.instances.weatherService.automaticTransitionFromOpenToHalfOpenEnabled: true
resilience4j.circuitbreaker.instances.weatherService.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.weatherService.failureRateThreshold: 50
resilience4j.circuitbreaker.instances.weatherService.minimumNumberOfCalls: 5
resilience4j.circuitbreaker.instances.weatherService.permittedNumberOfCallsInHalfOpenState: 3
resilience4j.circuitbreaker.instances.weatherService.registerHealthIndicator: true
resilience4j.circuitbreaker.instances.weatherService.slidingWindowSize: 100
resilience4j.circuitbreaker.instances.weatherService.slidingWindowType: COUNT_BASED
resilience4j.circuitbreaker.instances.weatherService.waitDurationInOpenState: 100s

resilience4j.circuitbreaker.instances.backendService.automaticTransitionFromOpenToHalfOpenEnabled: true
resilience4j.circuitbreaker.instances.backendService.failureRateThreshold: 50
resilience4j.circuitbreaker.instances.backendService.minimumNumberOfCalls: 5
resilience4j.circuitbreaker.instances.backendService.permittedNumberOfCallsInHalfOpenState: 3
resilience4j.circuitbreaker.instances.backendService.registerHealthIndicator: true
resilience4j.circuitbreaker.instances.backendService.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.backendService.slidingWindowType: COUNT_BASED
resilience4j.circuitbreaker.instances.backendService.waitDurationInOpenState: 100s
logging.level.io.github.resilience4j.circuitbreaker=DEBUG

management.health.circuitbreakers.enabled=true
management.endpoints.web.endpoints.exposure.include=health
management.endpoint.health.show-details=always

